#!/usr/bin/sage


import random

SIZE = 4096

SIZE_M_GMP = SIZE

SIZE_M_512 = 4108

wordsize = 52

M_GMP = 2**SIZE_M_GMP

M_512 = 2**SIZE_M_512

M_w = 2**wordsize

n = random.randint(2**SIZE_M_GMP//2,2**SIZE_M_GMP-1)

t=SIZE_M_512//wordsize


def blockmont(A, B, n_prime,n):
	T=0
	for i in range(t):
		T += ((A>>(i*52))%M_w)*int(B)
		Q = (T*int(n_prime))%int(M_w)
		

		T = (T+Q*n)//M_w
	return T


print("M_GMP =",hex(M_GMP), hex(2**SIZE//2))


n=809887259604657321281811410219696621139614593979555652417630045472659032590116061019226159701756953584996012220970574758236783020395454497114255425292043619261340444500574178114835566954382256557175491453853128575750569625961278173335291142799805290378594416111338241020962745983115913728871462047257442322966609634805443448941315638427059685076010963931659232635022880501289557382989772108701262094380966032396044163936073816475557775141127937151264464856367665439481283828126865545168553567218548169503071186031466085573388665673803287865576674432771579541418742805045235848513618986411931755555834635821116314283298349362509159327550073326812378879761030629786466573584182274727906364257412463503210584032683718425852187626376348301486345229055309823853582245009069082199763425431400055672574623631249241356057805632236894338939945190832105380485547833376368401446610462260869989904492753654603706752656002201193978691256706722437398615578079764918159325358925669285211888631106336297503783119985754073844409258081799078396930887868658999084891450748459340485861710363700035348791089689713989992556853162608435847149044098926718320492131325303330606498933313533153152128817561753511080222156330213954102173056709387224582955096931

F = IntegerModRing(M_GMP)


F2 = IntegerModRing(M_w)

F3 = IntegerModRing(M_512)


n512block=F2(n)
n_gmp=F(n)

n512=F3(n)

print("n =",n,"; is_prime()", is_prime(n))

n_prime_gmp = (-n_gmp%M_GMP)**(-1)%M_GMP

print("n_prime =",n_prime_gmp)

print("check",(-n_gmp*n_prime_gmp)%M_GMP)

n_prime_512 = (-n512block)**(-1)%M_w

print("n_prime =",n_prime_512)

print("check",(-n512*n_prime_512)%M_w)

r2_512 = (M_512*M_512)%n

print("r2_512 =",r2_512)

n_prime_512 = (-n512)**(-1)%M_512

print("n_prime =",n_prime_512)

print("check",(-n512*n_prime_512)%M_512)

f= open("montParam.c","w")

f.write("/*   Montgomery parameters !*/\n\n")

line = "\tmpz_set_str(modul_p, \""+str(n)+"\",10);\n"
f.write(line)

line = "\tp_prime[0] = "+str(n_prime_512)+" ;\n"
f.write(line)


line = "\tmpz_set_str(r2_gmp_512, \""+str(r2_512)+"\",10);\n"
f.write(line)



f.close()

